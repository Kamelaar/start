body {
    margin: 0; 
    padding: 0;
    border: 0; 
    min-width: 320px; 
    color: #777; 
}
html, button, input, select, textarea, .pure-g [class *= "pure-u"] { 
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; 
    font-size: 1.02em; 
}
p, td {
    line-height: 1.5; 
}
ul { 
    padding: 0 0 0 20px; 
}

th { 
    background: #eee; 
    white-space: nowrap; 
}
th, td { 
    padding: 10px; 
    text-align: left; 
    vertical-align: top; 
    font-size: .9em; 
    font-weight: normal; 
    border-right: 1px solid #fff; 
}
td:first-child { 
    white-space: nowrap; 
    color: #008000; 
    width: 1%; 
    font-style: italic; 
}
h1{
    text-align: center;
}

a { 
    color: #4e99c7; 
    text-decoration: none; 
}
a:hover { 
    text-decoration: underline; 
}
p, pre { 
    margin: 0 0 1.2em; 
}
::selection {
    color: #fff; 
    background: #328efd; 
}
::-moz-selection { 
    color: #fff; background: #328efd; 
}
@media (
    max-width:480px) {
    td:first-child { 
        white-space: normal; 
    }
}
#puzzle-containment{
    display: block;
    margin-left: auto;
    margin-right: auto 
}
.inline-code { 
    padding: 1px 5px; 
    background: #eee; 
    border-radius: 2px; 
}
pre { 
    padding: 15px 10px; 
    font-size: .9em; 
    color: #555; 
    background: #edf3f8; 
}
pre i { 
    color: #aaa; 
} /* comments */
pre b { 
    font-weight: normal; 
    color: #cf4b25; 
} /* strings */
pre em { 
    color: #0c59e9; 
} /* numeric */

/* Pure CSS */
.pure-button { 
    margin: 5px 0; text-decoration: none !important; 
}
.button-lg { 
    margin: 5px 0; padding: .65em 1.6em; font-size: 105%; 
}

/* required snapPuzzle styles */
.snappuzzle-wrap { 
    position: relative; display: block; 
}
.snappuzzle-pile { 
    position: relative; 
}
.snappuzzle-piece { 
    cursor: move; 
}
.snappuzzle-slot { 
    position: absolute; 
    background: #fff; 
    opacity: .8; 
}
.snappuzzle-slot-hover { 
    background: #eee; 
}
#countdown {
margin: auto;
margin-top: 100px;
height: 100px;
width: 100px;
text-align: center;
position: absolute; /* postulat de départ */
top: 0%; left: 90%; /* à 50%/50% du parent référent */
transform: translate(-50%, -50%); /* décalage de 50% de sa propre taille */
}

#countdown-number {
color: black;
display: inline-block;
line-height: 40px;
}

svg {
position: absolute;
top: 0;
right: 0;
width: 100px;
height: 40px;
transform: rotateY(-180deg) rotateZ(-90deg);
}

svg circle {
stroke-dasharray: 113px;
stroke-dashoffset: 100px;
stroke-linecap: round;
stroke-width: 3px;
stroke: black;
fill: none;
animation: countdown 1s linear infinite forwards;
}

@keyframes countdown {
from {
  stroke-dashoffset: 0px;
}
to {
  stroke-dashoffset: 200px;
}
}